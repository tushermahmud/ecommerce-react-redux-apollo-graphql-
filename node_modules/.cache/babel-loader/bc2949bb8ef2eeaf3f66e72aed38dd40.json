{"ast":null,"code":"var _jsxFileName = \"E:\\\\ecommerce\\\\ecommerce\\\\src\\\\pages\\\\category\\\\CategoryPage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CollectionItemsComponent from \"../../components/collection-items/CollectionItemsComponent\";\nimport { covertCollectionSnapshotToMap, firestore } from \"../../firebase/firebase.util\";\nimport { updateCollections } from \"../../redux/shop/shopAction\";\n\nconst mapStateToProps = state => ({\n  collections: state.shop.collections\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nclass CategoryPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      categoryCollections: this.props.collections\n    };\n    this.unsbuscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections,\n      collections,\n      match\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsbuscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = covertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n    console.log(this.state.categoryCollections);\n    /*this.setState({\r\n        categoryCollections:\r\n    })*/\n\n    /*this.state.categoryCollections=collections.filter\r\n    (categoryCollection=> categoryCollection.routeName===match.params.categoryId);\r\n    console.log(categoryCollections);*/\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage);","map":{"version":3,"sources":["E:/ecommerce/ecommerce/src/pages/category/CategoryPage.js"],"names":["React","connect","CollectionItemsComponent","covertCollectionSnapshotToMap","firestore","updateCollections","mapStateToProps","state","collections","shop","mapDispatchToProps","dispatch","collectionMap","CategoryPage","Component","items","categoryCollections","props","unsbuscribeFromSnapshot","componentDidMount","match","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,wBAAP,MAAqC,4DAArC;AACA,SAAQC,6BAAR,EAAuCC,SAAvC,QAAuD,8BAAvD;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;;AACA,MAAMC,eAAe,GAACC,KAAK,KAAG;AAC1BC,EAAAA,WAAW,EAACD,KAAK,CAACE,IAAN,CAAWD;AADG,CAAH,CAA3B;;AAGA,MAAME,kBAAkB,GAACC,QAAQ,KAAG;AAChCN,EAAAA,iBAAiB,EAAEO,aAAD,IAAiBD,QAAQ,CAACN,iBAAiB,CAACO,aAAD,CAAlB;AADX,CAAH,CAAjC;;AAGA,MAAMC,YAAN,SAA2Bb,KAAK,CAACc,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCP,KADuC,GACjC;AACFQ,MAAAA,KAAK,EAAC,EADJ;AAEFC,MAAAA,mBAAmB,EAAC,KAAKC,KAAL,CAAWT;AAF7B,KADiC;AAAA,SAKvCU,uBALuC,GAKf,IALe;AAAA;;AAMvCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACd,MAAAA,iBAAD;AAAmBG,MAAAA,WAAnB;AAA+BY,MAAAA;AAA/B,QAAsC,KAAKH,KAAjD;AACA,UAAMI,aAAa,GAACjB,SAAS,CAACkB,UAAV,CAAqB,aAArB,CAApB;AACA,SAAKJ,uBAAL,GAA6BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AAClE,YAAMC,cAAc,GAACtB,6BAA6B,CAACqB,QAAD,CAAlD;AACAnB,MAAAA,iBAAiB,CAACoB,cAAD,CAAjB;AACH,KAH4B,CAA7B;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWS,mBAAvB;AAEA;;;;AAGC;;;AAGJ;;AACDY,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASP;;AAjC0C;;AAoC3C,eAAe3B,OAAO,CAACK,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CG,YAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport CollectionItemsComponent from \"../../components/collection-items/CollectionItemsComponent\";\r\nimport {covertCollectionSnapshotToMap, firestore} from \"../../firebase/firebase.util\";\r\nimport {updateCollections} from \"../../redux/shop/shopAction\";\r\nconst mapStateToProps=state=>({\r\n    collections:state.shop.collections\r\n});\r\nconst mapDispatchToProps=dispatch=>({\r\n    updateCollections:(collectionMap)=>dispatch(updateCollections(collectionMap))\r\n});\r\nclass CategoryPage extends React.Component {\r\n    state={\r\n        items:[],\r\n        categoryCollections:this.props.collections,\r\n    }\r\n    unsbuscribeFromSnapshot=null;\r\n    componentDidMount() {\r\n        const {updateCollections,collections,match}=this.props;\r\n        const collectionRef=firestore.collection('collections');\r\n        this.unsbuscribeFromSnapshot=collectionRef.onSnapshot(async snapshot=>{\r\n            const collectionsMap=covertCollectionSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap)\r\n        })\r\n        console.log(this.state.categoryCollections);\r\n\r\n        /*this.setState({\r\n            categoryCollections:\r\n        })*/\r\n         /*this.state.categoryCollections=collections.filter\r\n        (categoryCollection=> categoryCollection.routeName===match.params.categoryId);\r\n        console.log(categoryCollections);*/\r\n    }\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"collection-page\">\r\n                {/*<h2 className=\"title\">{categoryCollections[0].title.toUpperCase()}</h2>\r\n                <div className=\"items\">\r\n                    {items.map(item=><CollectionItemsComponent key={item.id} item={item}/>)}\r\n                </div>*/}\r\n            </div>\r\n        );\r\n\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CategoryPage);"]},"metadata":{},"sourceType":"module"}