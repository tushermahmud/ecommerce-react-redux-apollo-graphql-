{"ast":null,"code":"var _jsxFileName = \"E:\\\\ecommerce\\\\ecommerce\\\\src\\\\pages\\\\category\\\\CategoryPage.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CollectionItemsComponent from \"../../components/collection-items/CollectionItemsComponent\";\nimport { covertCollectionSnapshotToMap, firestore } from \"../../firebase/firebase.util\";\nimport { updateCollections } from \"../../redux/shop/shopAction\";\n\nclass CategoryPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = covertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match,\n      collections\n    } = this.props;\n\n    if (collections.length > 0) {\n      const categoryCollections = collections.filter(categoryCollection => categoryCollection.routeName === match.params.categoryId);\n      console.log(categoryCollections);\n    }\n    /**/\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  collections: state.shop.collections\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryPage);","map":{"version":3,"sources":["E:/ecommerce/ecommerce/src/pages/category/CategoryPage.js"],"names":["React","connect","CollectionItemsComponent","covertCollectionSnapshotToMap","firestore","updateCollections","CategoryPage","Component","state","items","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","collections","length","categoryCollections","filter","categoryCollection","routeName","params","categoryId","console","log","mapStateToProps","shop","mapDispatchToProps","dispatch","collectionMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,wBAAP,MAAqC,4DAArC;AACA,SAAQC,6BAAR,EAAuCC,SAAvC,QAAuD,8BAAvD;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GACjC;AACFC,MAAAA,KAAK,EAAC;AADJ,KADiC;AAAA;;AAIvCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACL,MAAAA;AAAD,QAAoB,KAAKM,KAA/B;AACA,UAAMC,aAAa,GAACR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAApB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AACrC,YAAMC,cAAc,GAACb,6BAA6B,CAACY,QAAD,CAAlD;AACAV,MAAAA,iBAAiB,CAACW,cAAD,CAAjB;AACH,KAHD;AAKH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAoB,KAAKR,KAA/B;;AACA,QAAGQ,WAAW,CAACC,MAAZ,GAAmB,CAAtB,EAAwB;AACpB,YAAMC,mBAAmB,GAACF,WAAW,CAACG,MAAZ,CACzBC,kBAAkB,IAAGA,kBAAkB,CAACC,SAAnB,KAA+BN,KAAK,CAACO,MAAN,CAAaC,UADxC,CAA1B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,mBAAZ;AACH;AAED;;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASP;;AAhC0C;;AAkC3C,MAAMQ,eAAe,GAACrB,KAAK,KAAG;AAC1BW,EAAAA,WAAW,EAACX,KAAK,CAACsB,IAAN,CAAWX;AADG,CAAH,CAA3B;;AAGA,MAAMY,kBAAkB,GAACC,QAAQ,KAAG;AAChC3B,EAAAA,iBAAiB,EAAE4B,aAAD,IAAiBD,QAAQ,CAAC3B,iBAAiB,CAAC4B,aAAD,CAAlB;AADX,CAAH,CAAjC;;AAGA,eAAehC,OAAO,CAAC4B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CzB,YAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport CollectionItemsComponent from \"../../components/collection-items/CollectionItemsComponent\";\r\nimport {covertCollectionSnapshotToMap, firestore} from \"../../firebase/firebase.util\";\r\nimport {updateCollections} from \"../../redux/shop/shopAction\";\r\n\r\nclass CategoryPage extends React.Component {\r\n    state={\r\n        items:[],\r\n    }\r\n    componentDidMount() {\r\n        const {updateCollections}=this.props;\r\n        const collectionRef=firestore.collection('collections');\r\n        collectionRef.onSnapshot(async snapshot=>{\r\n            const collectionsMap=covertCollectionSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap)\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const {match,collections}=this.props;\r\n        if(collections.length>0){\r\n            const categoryCollections=collections.filter\r\n            (categoryCollection=> categoryCollection.routeName===match.params.categoryId);\r\n            console.log(categoryCollections);\r\n        }\r\n\r\n        /**/\r\n\r\n        return(\r\n            <div className=\"collection-page\">\r\n                {/*<h2 className=\"title\">{categoryCollections[0].title.toUpperCase()}</h2>\r\n                <div className=\"items\">\r\n                    {items.map(item=><CollectionItemsComponent key={item.id} item={item}/>)}\r\n                </div>*/}\r\n            </div>\r\n        );\r\n\r\n}\r\n}\r\nconst mapStateToProps=state=>({\r\n    collections:state.shop.collections\r\n});\r\nconst mapDispatchToProps=dispatch=>({\r\n    updateCollections:(collectionMap)=>dispatch(updateCollections(collectionMap))\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CategoryPage);"]},"metadata":{},"sourceType":"module"}